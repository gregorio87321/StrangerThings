{"version":3,"sources":["api/index.js","components/Login.js","components/NewPostForm.js","components/Posts.js","components/Register.js","components/SinglePost.js","index.js"],"names":["callApi","a","url","method","token","body","options","toUpperCase","headers","JSON","stringify","fetch","response","json","data","error","console","Login","props","setToken","useState","username","setUsername","password","setPassword","history","useHistory","handleSubmit","event","preventDefault","userData","user","localStorage","setItem","push","log","style","textAlign","onSubmit","type","placeholder","value","onChange","target","to","NewPostForm","setPosts","posts","action","postId","useParams","title","description","price","location","willDeliver","newPost","setNewPost","isEdit","API_URL","post","filteredPosts","filter","_id","handlePostFieldChange","property","checked","className","styles","searchContainer","display","justifyContent","padding","alignItems","searchInput","margin","Posts","searchTerm","setSearchTerm","showNewPostForm","setShowNewPostForm","setNewPosts","searchTermLower","toLowerCase","author","includes","postMatches","onClick","newPosts","addNewPosts","map","Register","SinglePost","find","App","setUserData","fetchUserData","fetchPosts","useEffect","getItem","logout","removeItem","window","reload","marginLeft","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fd025e6b.chunk.js","sourcesContent":[" const API_URL = 'https://strangers-things.herokuapp.com/api/2108-LSU-RM-WEB-PT';\r\n const API_POST = '/posts'\r\n const API_REGISTER = '/users/register'\r\n \r\n export const callApi = async ({ url, method, token, body }) => {\r\n    try {\r\n      const options = {\r\n        method: method ? method.toUpperCase() : 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(body),\r\n      };\r\n      if (token) {\r\n        options.headers['Authorization'] = `Bearer ${token}`;\r\n      }\r\n      const response = await fetch(API_URL + url, options);\r\n      const data = await response.json();\r\n      if (data.error) throw data.error;\r\n      return data;\r\n    } catch (error) {\r\n      console.error('ERROR: ', error);\r\n      return error\r\n    }\r\n  };\r\n\r\n export async function registerUser(user) {\r\n    const options = {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(user),\r\n    };\r\n   try {\r\n     const response = await fetch(`${ BASE_URL }${API_REGISTER}`, options);\r\n     const data = await response.json();\r\n     return data;\r\n   } catch (error) {\r\n     throw error;\r\n   }\r\n }\r\n \r\n","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { callApi } from \"../api\";\r\n\r\nconst Login = (props) => {\r\n    const { setToken } = props\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const history = useHistory()\r\n    \r\n    const handleSubmit = async (event) => {\r\n      event.preventDefault();\r\n      const userData = {\r\n        user: {\r\n          username,\r\n          password,\r\n        },\r\n      };\r\n      try {\r\n          const { data } = await callApi({\r\n              url: '/users/login',\r\n              method: 'POST',\r\n              body: userData\r\n            });\r\n        const { token } = data\r\n        localStorage.setItem('token', JSON.stringify(token));\r\n        setToken(token)\r\n        history.push(`/posts`)\r\n        console.log('token', token)\r\n      \r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n    \r\n    return (\r\n     <div>\r\n        <h1 style={{textAlign: 'center'}}>Log In</h1>\r\n        <form onSubmit={handleSubmit}>\r\n         <input\r\n            type='text' \r\n            placeholder='Username' \r\n            value={username}\r\n            onChange={(event) => setUsername(event.target.value)}\r\n          ></input>\r\n          <input\r\n            type='password' \r\n            placeholder='Password'\r\n            value={password}\r\n            onChange={(event) => setPassword(event.target.value)}\r\n           ></input>\r\n           <button type='submit'>Login</button>\r\n        </form>\r\n        <Link to=\"/register\">Don't have an account? Sign Up</Link>\r\n        {/* <button \r\n          onClick={(event) => {\r\n          event.preventDefault()\r\n          console.log(\"sending message\")\r\n        }}>\r\n          Don't have an account? Sign Up\r\n        </button> */}\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { callApi } from '../api';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nconst NewPostForm = ({ token, setPosts, posts, action }) => {\r\n  const history = useHistory();\r\n  const { postId } = useParams();\r\n\r\n  const [newPost, setNewPost] = useState({\r\n    title: '',\r\n    description: '',\r\n    price: 0,\r\n    location: '',\r\n    willDeliver: false,\r\n  });\r\n  const isEdit = action === 'edit';\r\n  const title = isEdit ? 'Edit this post' : 'Add a New Post';\r\n  const method = isEdit ? 'PATCH' : 'POST';\r\n  const API_URL = isEdit ? `/posts/${postId}` : `/posts`;\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const {\r\n        data: { post },\r\n      } = await callApi({\r\n        url: API_URL,\r\n        method: method,\r\n        body: {\r\n          post: {\r\n            title: newPost.title,\r\n            description: newPost.description,\r\n            price: newPost.price,\r\n            location: newPost.location,\r\n            willDeliver: newPost.willDeliver,\r\n          },\r\n        },\r\n        token,\r\n      });\r\n\r\n      if (isEdit) {\r\n        //* grab existing posts other than the one ive edited\r\n        //* add in the post ive edited\r\n        const filteredPosts = posts.filter((post) => post._id !== postId);\r\n        setPosts([...filteredPosts, post]);\r\n      } else {\r\n        //* Otherwise I am creating a post, so just take my old posts and add this new one to the bottom of the list\r\n        setPosts([...posts, post]);\r\n      }\r\n      //* No matter what send users to the /posts page when we are done\r\n      history.push('/posts');\r\n    } catch (error) {\r\n      console.error('error adding a post: ', error);\r\n    }\r\n  };\r\n\r\n  const handlePostFieldChange = (property) => (event) => {\r\n    if (property === 'willDeliver') {\r\n      setNewPost({ ...newPost, [property]: event.target.checked });\r\n    } else {\r\n      setNewPost({ ...newPost, [property]: event.target.value });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"newPostHead\">{title}</h2>\r\n      <div className=\"newPost\">\r\n      <form className=\"newPost\" onSubmit={handleSubmit}>\r\n        <input \r\n          type=\"text\"\r\n          placeholder=\"title\"\r\n          onChange={handlePostFieldChange('title')}\r\n          value={newPost.title}\r\n        ></input>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"description\"\r\n          onChange={handlePostFieldChange('description')}\r\n          value={newPost.description}\r\n        ></input>\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"price\"\r\n          onChange={handlePostFieldChange('price')}\r\n          value={newPost.price}\r\n        ></input>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"location\"\r\n          onChange={handlePostFieldChange('location')}\r\n          value={newPost.location}\r\n        ></input>\r\n        <label>\r\n          Deliver ?\r\n          <input\r\n            type=\"checkbox\"\r\n            onChange={handlePostFieldChange('willDeliver')}\r\n            value={newPost.willDeliver}\r\n          ></input>\r\n        </label>\r\n        <button>{title}</button>\r\n      </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewPostForm;","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport NewPostForm from \"./NewPostForm\";\r\n\r\nconst styles = {\r\n    searchContainer: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      padding: '16px',\r\n      alignItems: 'center',\r\n    },\r\n    searchInput: {\r\n      margin: '0 16px',\r\n    },\r\n  };\r\n  \r\n  const postMatches = (post, searchTerm) => {\r\n    const searchTermLower = searchTerm.toLowerCase();\r\n    const {\r\n      description,\r\n      location,\r\n      title,\r\n      author: { username },\r\n    } = post;\r\n  \r\n    const toMatch = [description, location, title, username];\r\n  \r\n    for (const field of toMatch) {\r\n      if (field.toLowerCase().includes(searchTermLower)) {\r\n        return true;\r\n      }\r\n    }\r\n  };\r\n\r\nconst Posts = (props) => {\r\n  const { token, posts, userData } = props;\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [showNewPostForm, setShowNewPostForm] = useState(false);\r\n  const [newPosts, setNewPosts] = useState([...posts]);\r\n\r\n  const addNewPosts = (newPosts) => {\r\n    setNewPosts(newPosts)\r\n    setShowNewPostForm(false)\r\n  }\r\n\r\n  const filteredPosts = posts.filter((post) => postMatches(post,searchTerm))\r\n  const history = useHistory()\r\n \r\n  return (\r\n    <div>\r\n      <div style={styles.searchContainer}>\r\n        <h2 className=\"allPosts\">Posts</h2>\r\n        <input\r\n          style={styles.searchInput}\r\n          type='text'\r\n          placeholder='search for posts'\r\n          value={searchTerm}\r\n          onChange={(event) => {\r\n           setSearchTerm(event.target.value);\r\n          }}\r\n        ></input>\r\n      </div>\r\n\r\n      {userData.username && !showNewPostForm ? (\r\n        <button\r\n          onClick={(event) => {\r\n            event.preventDefault();\r\n            setShowNewPostForm(true);\r\n          }}\r\n        >\r\n          New Post\r\n        </button>\r\n      ) : null}\r\n      {showNewPostForm ? (\r\n        <NewPostForm token={token} setPosts={(posts) => addNewPosts(posts)} posts={posts} action=\"create\" />\r\n      ) : (\r\n        filteredPosts.map((post) => (\r\n          <div  key={post._id}>\r\n            <h3 className=\"posts\">{post.title}</h3>\r\n            \r\n            <span>{post.description}</span>\r\n            <br></br>\r\n            <span>Price: {post.price}</span>\r\n            <br></br>\r\n            <span>Seller: {post.author.username}</span>\r\n            <br></br>\r\n            <span>Location: {post.location}</span>\r\n            <br></br>\r\n            <button className=\"btn-info\"\r\n            onClick={() => history.push(`/posts/${post._id}`)}> view post \r\n                 </button>\r\n            \r\n            <button className=\"send_message btn-info\"\r\n              onClick={(event) => {\r\n                event.preventDefault();\r\n              }}\r\n            >\r\n              SEND MESSAGE\r\n            </button>\r\n            {/* {userData.username === post.author.username ?\r\n                <button\r\n                onClick={(event) => {\r\n                  event.preventDefault();\r\n                  console.log(\"sending message\");\r\n                }}\r\n              >\r\n                EDIT MESSAGE\r\n              </button>   \r\n              : null\r\n        } */}\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import React, { useState } from \"react\";\r\nimport { callApi } from \"../api\";\r\nimport { Link, useHistory } from \"react-router-dom\"\r\n\r\n\r\nconst Register = (props) => {\r\n    const { setToken } = props;\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const history = useHistory()\r\n \r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const userData = {\r\n          user: {\r\n            username,\r\n            password,\r\n          },\r\n        };\r\n        try {\r\n            const { data } = await callApi({\r\n                url: '/users/register',\r\n                method: 'POST',\r\n                body: userData\r\n              });\r\n          const { token } = data\r\n          localStorage.setItem('token', JSON.stringify(token));\r\n          setToken(token)\r\n          history.push(`/posts`)\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      };\r\n    \r\n    return (\r\n     <div>\r\n        <h1 style={{textAlign: 'center'}}>Register</h1>\r\n        <form onSubmit={handleSubmit}>\r\n         <input\r\n            type='text' \r\n            placeholder='Username' \r\n            value={username}\r\n            onChange={(event) => setUsername(event.target.value)}\r\n          ></input>\r\n          <input\r\n            type='password' \r\n            placeholder='Password'\r\n            value={password}\r\n            onChange={(event) => setPassword(event.target.value)}\r\n           ></input>\r\n           <button type='submit'>Register</button>\r\n        </form>\r\n        <Link to=\"/Login\">Already have an account? Log In</Link>\r\n        {/* <button \r\n          onClick={(event) => {\r\n          event.preventDefault()\r\n          console.log(\"sending message\")\r\n        }}>\r\n          Don't have an account? Sign Up\r\n        </button> */}\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default Register;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst SinglePost = ({ posts, token, setPosts, userData }) => {\r\n  const { postId } = useParams();\r\n  const post = posts.find((post) => postId === post._id);\r\n  return (\r\n    <>\r\n      {post ? (\r\n        <div>\r\n          <h3>{post.title}</h3>\r\n          <p>Posted by: {post.author.username}</p>\r\n          <p>Price: {post.price}</p>\r\n          <p>Location: {post.location}</p>\r\n          <p>Delivers: {post.willDeliver ? 'Yes' : 'No'}</p>\r\n        </div>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SinglePost;","import \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport { Login, Posts, Register, SinglePost } from \"./components\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { callApi } from \"./api\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nconst App = () => {\r\n  const [token, setToken] = useState(\"\");\r\n  const [userData, setUserData] = useState({});\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  const history = useHistory();\r\n\r\n  const fetchUserData = async (token) => {\r\n    const { data } = await callApi({\r\n      url: \"/users/me\",\r\n      token,\r\n    });\r\n    return data;\r\n  };\r\n\r\n  const fetchPosts = async () => {\r\n    const {\r\n      data: { posts },\r\n    } = await callApi({\r\n      url: \"/posts\",\r\n    });\r\n    return posts;\r\n  };\r\n\r\n  useEffect(async () => {\r\n    if (!token) {\r\n      setToken(localStorage.getItem(\"token\"));\r\n      return;\r\n    }\r\n    const data = await fetchUserData(token);\r\n    if (data && data.username) {\r\n      setUserData(data);\r\n    }\r\n  }, [token]);\r\n\r\n  useEffect(async () => {\r\n    const posts = await fetchPosts();\r\n    setPosts(posts);\r\n  }, []);\r\n\r\n  const logout = async () => {\r\n    // setToken(null);\r\n    // setUserData(null);\r\n    localStorage.removeItem(\"token\");\r\n    history.push(`/posts`);\r\n    window.location.reload(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h1 className=\"title\"> Stranger Things </h1>\r\n        <>\r\n        {!token ? (\r\n          <Link to=\"/login\">Log In</Link>\r\n        ) : (\r\n          <button className=\"btn-primary\"\r\n            onClick={(event) => {\r\n              // event.preventDefault();\r\n              logout();\r\n            }}\r\n          >\r\n            Log Out\r\n          </button>\r\n        )}\r\n        </>\r\n        { token ? \r\n        <>\r\n        <h2 className=\"user_greeting\"> Hello {userData.username}! </h2>\r\n        </> : \"\"}\r\n        <Link style={{ marginLeft: \"10px\" }} to=\"/posts\">\r\n          Posts\r\n        </Link>\r\n      </div>\r\n    <Switch>\r\n      <Route path=\"/login\">\r\n        <Login action=\"login\" setToken={setToken} />\r\n      </Route>\r\n      <Route path=\"/register\">\r\n        <Register action=\"register\" setToken={setToken} />\r\n      </Route>\r\n      <Route path=\"/posts\">\r\n        <Posts token={token} posts={posts} userData={userData} />\r\n      </Route>\r\n      <Route path=\"/post/:postId\">\r\n        <SinglePost posts={posts} token={token} userData={userData} setPosts={setPosts}/>\r\n      </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById(\"app\")\r\n);\r\n"],"sourceRoot":""}